name: Build and Push Docker Image

on:
  push:
    branches:
      - master
      - next
  workflow_dispatch: 

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Extract commit hash
        id: commit_hash
        run: |
          COMMIT_HASH=${GITHUB_SHA::7}  # Get the first 7 characters of the commit hash
          echo "COMMIT_HASH=${COMMIT_HASH,,}" >> $GITHUB_ENV  # Convert to lowercase

      - name: Check for localhost in NEXT_PUBLIC_ variables
        run: |
          for var in $(printenv | grep '^NEXT_PUBLIC_' | cut -d= -f1); do
            value=$(printenv $var)
            if [[ "$value" == *"localhost"* ]]; then
              echo "ERROR: $var contains 'localhost'. This is not allowed."
              exit 1
            fi
          done

      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version number
        run: |
          if [ -f "package.json" ]; then
            VERSION=v$(node -p "require('./package.json').version")-${{ steps.extract_branch.outputs.branch }}.${{ env.COMMIT_HASH }}
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
            npm version "${VERSION}" --no-git-tag-version --allow-same-version
          else
            echo "package.json not found!"
            exit 1
          fi

      - name: Rename .env.public to .env
        run: mv .env.public .env

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.extract_branch.outputs.branch }}-latest
            ghcr.io/${{ github.repository }}:${{ steps.extract_branch.outputs.branch }}-${{ env.COMMIT_HASH }}

  deploy:
    runs-on: self-hosted
    needs: build-and-push
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Login to registry
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
      - name: Pull image
        run: docker pull ghcr.io/${{ github.repository }}:master-latest
      - name: Run container
        run: docker compose up -d
    env:
      DEV_MODE: false
      DATABASE_URL: ${{secrets.DATABASE_URL}}
      NEXTAUTH_URL: ${{secrets.NEXTAUTH_URL}}
      NEXTAUTH_SECRET: ${{secrets.NEXTAUTH_SECRET}}
      VATSIM_CLIENT_ID: ${{secrets.VATSIM_CLIENT_ID}}
      VATSIM_CLIENT_SECRET: ${{secrets.VATSIM_CLIENT_SECRET}}
      VATUSA_FACILITY: ${{secrets.VATUSA_FACILITY}}
      NEXT_PUBLIC_MAP_DEFAULT_CENTER_LAT: ${{secrets.NEXT_PUBLIC_MAP_DEFUALT_CENTER_LAT}}
      NEXT_PUBLIC_MAP_DEFAULT_CENTER_LONG: ${{secrets.NEXT_PUBLIC_MAP_DEFUALT_CENTER_LONG}}
      NEXT_PUBLIC_MAP_DEFAULT_ZOOM: ${{secrets.NEXT_PUBLIC_MAP_DEFUALT_ZOOM}}
      IS_STAFF_ENDPOINT: ${{secrets.IS_STAFF_ENDPOINT}}
      IDS_CONSOLIDATIONS_URL: ${{secrets.IDS_CONSOLIDATIONS_URL}}
      IDS_RADAR_URL: ${{secrets.IDS_RADAR_URL}}
      IDS_SECTOR_URL: ${{secrets.IDS_SECTOR_URL}}
      UPLOADTHING_TOKEN: ${{secrets.UPLOADTHING_TOKEN}}

